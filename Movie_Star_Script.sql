-- MySQL Script generated by MySQL Workbench
-- Sun Apr 14 22:25:25 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Movie_Star
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Movie_Star
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Movie_Star` DEFAULT CHARACTER SET utf8 ;
USE `Movie_Star` ;

-- -----------------------------------------------------
-- Table `Movie_Star`.`Top_Directors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Top_Directors` (
  `Position` INT NULL,
  PRIMARY KEY (`Position`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Genre` (
  `Genre` ENUM('Comedy', 'Drama', 'Adventure', 'Action', 'Science Fiction', 'Romantic Comedy', 'Musicals', 'Horror', 'Mystery', 'Animation', 'Documentaries') NOT NULL,
  PRIMARY KEY (`Genre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Movie_International`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Movie_International` (
  `ID` INT NOT NULL,
  `Title` VARCHAR(60) NOT NULL,
  `Production Date` DATE NOT NULL,
  `Country_of_Origin` VARCHAR(60) NOT NULL,
  `Production_Company` VARCHAR(60) NOT NULL,
  `Duration` INT NOT NULL,
  `Director_ID` INT NOT NULL,
  `Genre_Genre` ENUM('Comedy', 'Drama', 'Adventure', 'Action', 'Science Fiction', 'Romantic Comedy', 'Musicals', 'Horror', 'Mystery', 'Animation', 'Documentaries') NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Movie_International_Director1_idx` (`Director_ID` ASC) VISIBLE,
  INDEX `fk_Movie_International_Genre1_idx` (`Genre_Genre` ASC) VISIBLE,
  CONSTRAINT `fk_Movie_International_Director1`
    FOREIGN KEY (`Director_ID`)
    REFERENCES `Movie_Star`.`Director` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_International_Genre1`
    FOREIGN KEY (`Genre_Genre`)
    REFERENCES `Movie_Star`.`Genre` (`Genre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Country` (
  `ID` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Movie_International_ID` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Country_Movie_International1_idx` (`Movie_International_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Country_Movie_International1`
    FOREIGN KEY (`Movie_International_ID`)
    REFERENCES `Movie_Star`.`Movie_International` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Movie_Domestic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Movie_Domestic` (
  `ID` INT NOT NULL,
  `Title` VARCHAR(45) NOT NULL,
  `Production Date` DATE NOT NULL,
  `Country_of_Origin` VARCHAR(45) NOT NULL,
  `Production_Company` VARCHAR(45) NOT NULL,
  `Duration` INT NOT NULL,
  `Headquarters` VARCHAR(45) NOT NULL,
  `Director_ID` INT NOT NULL,
  `Country_ID` INT NOT NULL,
  `Genre_Genre` ENUM('Comedy', 'Drama', 'Adventure', 'Action', 'Science Fiction', 'Romantic Comedy', 'Musicals', 'Horror', 'Mystery', 'Animation', 'Documentaries') NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Movie_Domestic_Director1_idx` (`Director_ID` ASC) VISIBLE,
  INDEX `fk_Movie_Domestic_Country1_idx` (`Country_ID` ASC) VISIBLE,
  INDEX `fk_Movie_Domestic_Genre1_idx` (`Genre_Genre` ASC) VISIBLE,
  CONSTRAINT `fk_Movie_Domestic_Director1`
    FOREIGN KEY (`Director_ID`)
    REFERENCES `Movie_Star`.`Director` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_Domestic_Country1`
    FOREIGN KEY (`Country_ID`)
    REFERENCES `Movie_Star`.`Country` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_Domestic_Genre1`
    FOREIGN KEY (`Genre_Genre`)
    REFERENCES `Movie_Star`.`Genre` (`Genre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Competitions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Competitions` (
  `ID` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Country_of_Conduct` VARCHAR(45) NOT NULL,
  `Date` DATE NOT NULL,
  `Director_ID` INT NOT NULL,
  `Movie_International_ID` INT NULL,
  `Movie_Domestic_ID` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Competitions_Director1_idx` (`Director_ID` ASC) VISIBLE,
  INDEX `fk_Competitions_Movie_International1_idx` (`Movie_International_ID` ASC) VISIBLE,
  INDEX `fk_Competitions_Movie_Domestic1_idx` (`Movie_Domestic_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Competitions_Director1`
    FOREIGN KEY (`Director_ID`)
    REFERENCES `Movie_Star`.`Director` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Competitions_Movie_International1`
    FOREIGN KEY (`Movie_International_ID`)
    REFERENCES `Movie_Star`.`Movie_International` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Competitions_Movie_Domestic1`
    FOREIGN KEY (`Movie_Domestic_ID`)
    REFERENCES `Movie_Star`.`Movie_Domestic` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Social_Media_Pages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Social_Media_Pages` (
  `ID` INT NOT NULL,
  `Competitions_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Social_Media_Pages_Competitions1_idx` (`Competitions_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Social_Media_Pages_Competitions1`
    FOREIGN KEY (`Competitions_ID`)
    REFERENCES `Movie_Star`.`Competitions` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Player_Movie_Star`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Player_Movie_Star` (
  `Player_ID` INT NOT NULL,
  PRIMARY KEY (`Player_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Director` (
  `ID` INT NOT NULL,
  `Full_Name` VARCHAR(45) NOT NULL,
  `Age` INT NOT NULL,
  `Nationalities` VARCHAR(60) NOT NULL,
  `Directors_Models` VARCHAR(60) NOT NULL,
  `Skill_Points` INT NOT NULL,
  `Top_Directors_Position` INT NOT NULL,
  `Social_Media_Pages_ID` INT NULL,
  `Friend_Director_ID` INT NULL,
  `Player_Movie_Star_Player_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Player_Movie_Star_Player_ID`),
  INDEX `fk_Director_Top_Directors1_idx` (`Top_Directors_Position` ASC) VISIBLE,
  INDEX `fk_Director_Social_Media_Pages1_idx` (`Social_Media_Pages_ID` ASC) VISIBLE,
  INDEX `fk_Director_Director1_idx` (`Friend_Director_ID` ASC) VISIBLE,
  INDEX `fk_Director_Player_Movie_Star1_idx` (`Player_Movie_Star_Player_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Director_Top_Directors1`
    FOREIGN KEY (`Top_Directors_Position`)
    REFERENCES `Movie_Star`.`Top_Directors` (`Position`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Director_Social_Media_Pages1`
    FOREIGN KEY (`Social_Media_Pages_ID`)
    REFERENCES `Movie_Star`.`Social_Media_Pages` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Director_Director1`
    FOREIGN KEY (`Friend_Director_ID`)
    REFERENCES `Movie_Star`.`Director` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Director_Player_Movie_Star1`
    FOREIGN KEY (`Player_Movie_Star_Player_ID`)
    REFERENCES `Movie_Star`.`Player_Movie_Star` (`Player_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Sponsors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Sponsors` (
  `ID` INT NOT NULL,
  `Full_Name` VARCHAR(45) NOT NULL,
  `Sponsorship` DECIMAL NOT NULL,
  `Movie_International_ID` INT NOT NULL,
  `Movie_Domestic_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Movie_Domestic_ID`),
  INDEX `fk_Sponsors_Movie_International1_idx` (`Movie_International_ID` ASC) VISIBLE,
  INDEX `fk_Sponsors_Movie_Domestic1_idx` (`Movie_Domestic_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Sponsors_Movie_International1`
    FOREIGN KEY (`Movie_International_ID`)
    REFERENCES `Movie_Star`.`Movie_International` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Sponsors_Movie_Domestic1`
    FOREIGN KEY (`Movie_Domestic_ID`)
    REFERENCES `Movie_Star`.`Movie_Domestic` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`AI_Machine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`AI_Machine` (
  `Script_Movie_Name` VARCHAR(60) NOT NULL,
  `Duration` DECIMAL NOT NULL,
  `Director_ID` INT NOT NULL,
  `Genre_Genre` ENUM('Comedy', 'Drama', 'Adventure', 'Action', 'Science Fiction', 'Romantic Comedy', 'Musicals', 'Horror', 'Mystery', 'Animation', 'Documentaries') NOT NULL,
  PRIMARY KEY (`Script_Movie_Name`),
  INDEX `fk_AI_Machine_Director1_idx` (`Director_ID` ASC) VISIBLE,
  INDEX `fk_AI_Machine_Genre1_idx` (`Genre_Genre` ASC) VISIBLE,
  CONSTRAINT `fk_AI_Machine_Director1`
    FOREIGN KEY (`Director_ID`)
    REFERENCES `Movie_Star`.`Director` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AI_Machine_Genre1`
    FOREIGN KEY (`Genre_Genre`)
    REFERENCES `Movie_Star`.`Genre` (`Genre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Actors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Actors` (
  `ID` INT NOT NULL,
  `Full_Name` VARCHAR(45) NOT NULL,
  `Actorscol1` VARCHAR(45) NOT NULL,
  `Photo` BLOB NOT NULL,
  `Date_of_Birth` DATE NOT NULL,
  `Nationalities` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Script`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Script` (
  `ID` INT NOT NULL,
  `Previous_ID` INT NULL,
  `Text` LONGTEXT NULL,
  `AI_Machine_Script_Movie_Name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Script_AI_Machine1_idx` (`AI_Machine_Script_Movie_Name` ASC) VISIBLE,
  CONSTRAINT `fk_Script_AI_Machine1`
    FOREIGN KEY (`AI_Machine_Script_Movie_Name`)
    REFERENCES `Movie_Star`.`AI_Machine` (`Script_Movie_Name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Roles` (
  `ID` INT NOT NULL,
  `Roles` ENUM('Protagonist', '2nd Actor/Actress', 'Extra') NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Physical _Characteristics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Physical _Characteristics` (
  `ID` INT NOT NULL,
  `Height` INT NOT NULL,
  `Weight` INT NOT NULL,
  `Appearance` INT NOT NULL,
  `Athletic` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Intellectual_Characteristics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Intellectual_Characteristics` (
  `ID` INT NOT NULL,
  `Developed_Imagination` INT NOT NULL,
  `EmotionaL_Fluency` INT NOT NULL,
  `Body_Expression` INT NOT NULL,
  `Clarity_of_Speech` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.` Technical_Characteristics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.` Technical_Characteristics` (
  `ID` INT NOT NULL,
  `Dialects` INT NOT NULL,
  `Voice` INT NOT NULL,
  `Improvisation` INT NOT NULL,
  `Watchfulness` INT NOT NULL,
  `Mimicry` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Training_Programs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Training_Programs` (
  `ID` INT NOT NULL,
  `Workout` INT NULL,
  `Learning_Pronunciation_or_Language` INT NULL,
  `Learning_a_Skill` INT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Contract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Contract` (
  `ID` INT NOT NULL,
  `Starting_Date` DATE NOT NULL,
  `Ending_Date` DATE NOT NULL,
  `Annual_Remuneration` INT NOT NULL,
  `Movie_Domestic_ID` INT NULL,
  `Movie_International_ID` INT NULL,
  `Actors_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Contract_Movie_Domestic1_idx` (`Movie_Domestic_ID` ASC) VISIBLE,
  INDEX `fk_Contract_Movie_International1_idx` (`Movie_International_ID` ASC) VISIBLE,
  INDEX `fk_Contract_Actors1_idx` (`Actors_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Contract_Movie_Domestic1`
    FOREIGN KEY (`Movie_Domestic_ID`)
    REFERENCES `Movie_Star`.`Movie_Domestic` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contract_Movie_International1`
    FOREIGN KEY (`Movie_International_ID`)
    REFERENCES `Movie_Star`.`Movie_International` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contract_Actors1`
    FOREIGN KEY (`Actors_ID`)
    REFERENCES `Movie_Star`.`Actors` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Awards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Awards` (
  `ID` INT NOT NULL,
  `Award` VARCHAR(45) NOT NULL,
  `Director_ID` INT NOT NULL,
  `Movie_International_ID` INT NULL,
  `Movie_Domestic_ID` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Awards_Director1_idx` (`Director_ID` ASC) VISIBLE,
  INDEX `fk_Awards_Movie_International1_idx` (`Movie_International_ID` ASC) VISIBLE,
  INDEX `fk_Awards_Movie_Domestic1_idx` (`Movie_Domestic_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Awards_Director1`
    FOREIGN KEY (`Director_ID`)
    REFERENCES `Movie_Star`.`Director` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Awards_Movie_International1`
    FOREIGN KEY (`Movie_International_ID`)
    REFERENCES `Movie_Star`.`Movie_International` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Awards_Movie_Domestic1`
    FOREIGN KEY (`Movie_Domestic_ID`)
    REFERENCES `Movie_Star`.`Movie_Domestic` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Actors_has_Physical _Characteristics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Actors_has_Physical _Characteristics` (
  `Actors_ID` INT NOT NULL,
  `Physical _Characteristics_ID` INT NOT NULL,
  PRIMARY KEY (`Actors_ID`, `Physical _Characteristics_ID`),
  INDEX `fk_Actors_has_Physical _Characteristics_Physical _Character_idx` (`Physical _Characteristics_ID` ASC) VISIBLE,
  INDEX `fk_Actors_has_Physical _Characteristics_Actors1_idx` (`Actors_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Actors_has_Physical _Characteristics_Actors1`
    FOREIGN KEY (`Actors_ID`)
    REFERENCES `Movie_Star`.`Actors` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actors_has_Physical _Characteristics_Physical _Characteris1`
    FOREIGN KEY (`Physical _Characteristics_ID`)
    REFERENCES `Movie_Star`.`Physical _Characteristics` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Actors_has_Intellectual_Characteristics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Actors_has_Intellectual_Characteristics` (
  `Actors_ID` INT NOT NULL,
  `Intellectual_Characteristics_ID` INT NOT NULL,
  PRIMARY KEY (`Actors_ID`, `Intellectual_Characteristics_ID`),
  INDEX `fk_Actors_has_Intellectual_Characteristics_Intellectual_Cha_idx` (`Intellectual_Characteristics_ID` ASC) VISIBLE,
  INDEX `fk_Actors_has_Intellectual_Characteristics_Actors1_idx` (`Actors_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Actors_has_Intellectual_Characteristics_Actors1`
    FOREIGN KEY (`Actors_ID`)
    REFERENCES `Movie_Star`.`Actors` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actors_has_Intellectual_Characteristics_Intellectual_Chara1`
    FOREIGN KEY (`Intellectual_Characteristics_ID`)
    REFERENCES `Movie_Star`.`Intellectual_Characteristics` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Actors_has_ Technical_Characteristics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Actors_has_ Technical_Characteristics` (
  `Actors_ID` INT NOT NULL,
  ` Technical_Characteristics_ID` INT NOT NULL,
  PRIMARY KEY (`Actors_ID`, ` Technical_Characteristics_ID`),
  INDEX `fk_Actors_has_ Technical_Characteristics_ Technical_Charact_idx` (` Technical_Characteristics_ID` ASC) VISIBLE,
  INDEX `fk_Actors_has_ Technical_Characteristics_Actors1_idx` (`Actors_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Actors_has_ Technical_Characteristics_Actors1`
    FOREIGN KEY (`Actors_ID`)
    REFERENCES `Movie_Star`.`Actors` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actors_has_ Technical_Characteristics_ Technical_Character1`
    FOREIGN KEY (` Technical_Characteristics_ID`)
    REFERENCES `Movie_Star`.` Technical_Characteristics` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Actors_has_Training_Programs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Actors_has_Training_Programs` (
  `Actors_ID` INT NOT NULL,
  `Training_Program_ID` INT NOT NULL,
  PRIMARY KEY (`Actors_ID`, `Training_Program_ID`),
  INDEX `fk_Actors_has_Training_Program_Training_Program1_idx` (`Training_Program_ID` ASC) VISIBLE,
  INDEX `fk_Actors_has_Training_Program_Actors1_idx` (`Actors_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Actors_has_Training_Program_Actors1`
    FOREIGN KEY (`Actors_ID`)
    REFERENCES `Movie_Star`.`Actors` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actors_has_Training_Program_Training_Program1`
    FOREIGN KEY (`Training_Program_ID`)
    REFERENCES `Movie_Star`.`Training_Programs` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Actors_has_Roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Actors_has_Roles` (
  `Actors_ID` INT NOT NULL,
  `Roles_ID` INT NOT NULL,
  PRIMARY KEY (`Actors_ID`, `Roles_ID`),
  INDEX `fk_Actors_has_Roles_Roles1_idx` (`Roles_ID` ASC) VISIBLE,
  INDEX `fk_Actors_has_Roles_Actors1_idx` (`Actors_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Actors_has_Roles_Actors1`
    FOREIGN KEY (`Actors_ID`)
    REFERENCES `Movie_Star`.`Actors` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actors_has_Roles_Roles1`
    FOREIGN KEY (`Roles_ID`)
    REFERENCES `Movie_Star`.`Roles` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Movie_Statistics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Movie_Statistics` (
  `Movie_Statistics_ID` INT NOT NULL,
  `Competitions_ID` INT NOT NULL,
  `Movie_Domestic_ID` INT NULL,
  `Movie_International_ID` INT NULL,
  `Category` VARCHAR(45) NOT NULL,
  `Value` INT NOT NULL,
  INDEX `fk_Movie_Statistics_Competitions1_idx` (`Competitions_ID` ASC) VISIBLE,
  INDEX `fk_Movie_Statistics_Movie_Domestic1_idx` (`Movie_Domestic_ID` ASC) VISIBLE,
  INDEX `fk_Movie_Statistics_Movie_International1_idx` (`Movie_International_ID` ASC) VISIBLE,
  PRIMARY KEY (`Movie_Statistics_ID`),
  CONSTRAINT `fk_Movie_Statistics_Competitions1`
    FOREIGN KEY (`Competitions_ID`)
    REFERENCES `Movie_Star`.`Competitions` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_Statistics_Movie_Domestic1`
    FOREIGN KEY (`Movie_Domestic_ID`)
    REFERENCES `Movie_Star`.`Movie_Domestic` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_Statistics_Movie_International1`
    FOREIGN KEY (`Movie_International_ID`)
    REFERENCES `Movie_Star`.`Movie_International` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Cities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Cities` (
  `Country_ID` INT NOT NULL,
  `Name` INT NOT NULL,
  PRIMARY KEY (`Country_ID`),
  CONSTRAINT `fk_Cities_Country1`
    FOREIGN KEY (`Country_ID`)
    REFERENCES `Movie_Star`.`Country` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Sets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Sets` (
  `Country_ID` INT NOT NULL,
  `Scenes` BLOB NOT NULL,
  PRIMARY KEY (`Country_ID`),
  INDEX `fk_Sets_Country1_idx` (`Country_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Sets_Country1`
    FOREIGN KEY (`Country_ID`)
    REFERENCES `Movie_Star`.`Country` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Competitions_has_Awards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Competitions_has_Awards` (
  `Competitions_ID` INT NOT NULL,
  `Awards_ID` INT NOT NULL,
  PRIMARY KEY (`Competitions_ID`, `Awards_ID`),
  INDEX `fk_Competitions_has_Awards_Awards1_idx` (`Awards_ID` ASC) VISIBLE,
  INDEX `fk_Competitions_has_Awards_Competitions1_idx` (`Competitions_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Competitions_has_Awards_Competitions1`
    FOREIGN KEY (`Competitions_ID`)
    REFERENCES `Movie_Star`.`Competitions` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Competitions_has_Awards_Awards1`
    FOREIGN KEY (`Awards_ID`)
    REFERENCES `Movie_Star`.`Awards` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Friendships`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Friendships` (
  `ID` INT NOT NULL,
  `Competitions_ID` INT NOT NULL,
  `Social_Media_Pages_ID` INT NOT NULL,
  `Director_ID` INT NOT NULL,
  `Friends_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_Friendships_Competitions1_idx` (`Competitions_ID` ASC) VISIBLE,
  INDEX `fk_Friendships_Social_Media_Pages1_idx` (`Social_Media_Pages_ID` ASC) VISIBLE,
  INDEX `fk_Friendships_Director1_idx` (`Director_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Friendships_Competitions1`
    FOREIGN KEY (`Competitions_ID`)
    REFERENCES `Movie_Star`.`Competitions` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Friendships_Social_Media_Pages1`
    FOREIGN KEY (`Social_Media_Pages_ID`)
    REFERENCES `Movie_Star`.`Social_Media_Pages` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Friendships_Director1`
    FOREIGN KEY (`Director_ID`)
    REFERENCES `Movie_Star`.`Director` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Posts` (
  `ID` INT NOT NULL,
  `Likes` INT NOT NULL,
  `Movie_International_ID` INT NULL,
  `Movie_Domestic_ID` INT NULL,
  `Director_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Director_ID`),
  INDEX `fk_Posts_Movie_International1_idx` (`Movie_International_ID` ASC) VISIBLE,
  INDEX `fk_Posts_Movie_Domestic1_idx` (`Movie_Domestic_ID` ASC) VISIBLE,
  INDEX `fk_Posts_Director1_idx` (`Director_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Posts_Movie_International1`
    FOREIGN KEY (`Movie_International_ID`)
    REFERENCES `Movie_Star`.`Movie_International` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Posts_Movie_Domestic1`
    FOREIGN KEY (`Movie_Domestic_ID`)
    REFERENCES `Movie_Star`.`Movie_Domestic` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Posts_Director1`
    FOREIGN KEY (`Director_ID`)
    REFERENCES `Movie_Star`.`Director` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie_Star`.`Training_Programs_has_ Technical_Characteristics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie_Star`.`Training_Programs_has_ Technical_Characteristics` (
  `Training_Programs_ID` INT NOT NULL,
  ` Technical_Characteristics_ID` INT NOT NULL,
  PRIMARY KEY (`Training_Programs_ID`, ` Technical_Characteristics_ID`),
  INDEX `fk_Training_Programs_has_ Technical_Characteristics_ Techni_idx` (` Technical_Characteristics_ID` ASC) VISIBLE,
  INDEX `fk_Training_Programs_has_ Technical_Characteristics_Trainin_idx` (`Training_Programs_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Training_Programs_has_ Technical_Characteristics_Training_1`
    FOREIGN KEY (`Training_Programs_ID`)
    REFERENCES `Movie_Star`.`Training_Programs` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Training_Programs_has_ Technical_Characteristics_ Technica1`
    FOREIGN KEY (` Technical_Characteristics_ID`)
    REFERENCES `Movie_Star`.` Technical_Characteristics` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
